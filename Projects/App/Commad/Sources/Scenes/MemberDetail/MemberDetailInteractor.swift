//
//  MemberDetailInteractor.swift
//  Commad
//
//  Created by 정명곤 on 1/4/24.
//  Copyright (c) 2024 commad. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MemberDetailBusinessLogic {
    func fetchMemberHistory(request: MemberDetailModels.MemberHistory.Request)
    func checkIn(request: MemberDetailModels.CheckIn.Request)
}

protocol MemberDetailDataStore {
    var member: Member? { get set }
//    var histories: [History]? { get set }
}

final class MemberDetailInteractor: MemberDetailBusinessLogic, MemberDetailDataStore {
    
    var presenter: MemberDetailPresentationLogic?
    var worker: MemberDetailWorker?
    
    var member: Member?
//    var histories: [History]?
    
    // MARK: Do something
    func fetchMemberHistory(request: MemberDetailModels.MemberHistory.Request) {
        worker = MemberDetailWorker()
        guard let member = self.member else { return }
        worker?.fetchMemberHistory(member: member, year: request.year, month: request.month) { response in
//            self.histories = response.histories
            self.presenter?.presentHistories(response: MemberDetailModels.MemberHistory.Response(histories: response.histories, isError: false))
        }
    }
    
    func checkIn(request: MemberDetailModels.CheckIn.Request) {
        worker = MemberDetailWorker()
        guard let member = self.member else { return }
        worker?.checkIn(member: member, { response in
            self.presenter?.presentCheckInAlert(response: MemberDetailModels.CheckIn.Response(history: response.history, isError: false))
        })
    }
}
